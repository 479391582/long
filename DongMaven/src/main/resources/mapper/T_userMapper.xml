<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="tuser">
    
     <!-- resultMap标签将了工程entity实体类中的对象与数据库中的表对应起来
         resultMap中的id属性是一个唯一的名字
         子标签中的id属性用来指定主键
         result标签用来指定其他的键，其中property属性是指实体中的字段，对应的
         column属性表示的数据库中的响应的字段
     -->
     <resultMap type="com.pro.dong.T_user.entity.T_user" id="tuserMap">
        <id property="usid" column="usid" jdbcType="VARCHAR"/>
        <result property="uname" column="uname" jdbcType="VARCHAR"/>
        <result property="upwd" column="upwd" jdbcType="VARCHAR"/>
        <result property="urealname" column="urealname" jdbcType="VARCHAR"/>
        <result property="uphone" column="uphone" jdbcType="VARCHAR"/>
    </resultMap>
    
   
     <!-- 登录 -->
     <select id="getUserByUsernameAndPassword" parameterType="com.pro.dong.T_user.entity.T_user" resultMap="tuserMap">
        select * from t_user where 
        <if test="uname != null">
         uname=#{uname} 
        </if>
       and upwd=#{upwd}
    </select>
    
  <!-- 根据用户名查询 -->
  <select id="name" parameterType="com.pro.dong.T_user.entity.T_user" resultMap="tuserMap">
  select * from t_user where  uname=#{uname} 
  </select>
  
    <!-- 添加 -->
    <!-- 动态insert -->
    <!-- 定义两个sql片段，第一个对应字段名,id属性值任意并且唯一 -->
    <sql id="key">
      <trim suffixOverrides=",">
        <if test="usid !=null">
            usid,
        </if>
        <if test="uname !=null">
            uname,
        </if>
        <if test="upwd !=null">
            upwd,
        </if>
        <if test="urealname !=null">
            urealname,
        </if>
        <if test="uphone !=null">
            uphone,
        </if>
      </trim>
    </sql>
    
    <!-- 定义第二个sql片段，第二个对应?，key属性值任意并且唯一 -->
    <sql id="value">
      <trim suffixOverrides=",">
        <if test="usid !=null">
            #{usid},
        </if>
        <if test="uname !=null">
            #{uname},
        </if>
        <if test="upwd !=null">
            #{upwd},
        </if>
        <if test="urealname !=null">
            #{urealname},
        </if>
        <if test="uphone !=null">
            #{uphone},
        </if>
      </trim>
    </sql>
    <insert id="insert" parameterType="com.pro.dong.T_user.entity.T_user">
        <selectKey keyProperty="usid" order="BEFORE" resultType="java.lang.String">
       select emp_sequence.NEXTVAL  from DUAL
        </selectKey>
         insert into t_user (<include refid="key"/>)
             values (<include refid="value"/>)
    </insert>
    
    <!-- 查询 -->
    <select id="all" resultMap="tuserMap">
        SELECT * FROM t_user 
    </select>
    
    <!-- 删除 -->
     <delete id="delete" parameterType="String">
        delete from t_user where usid=#{usid}
    </delete>
    
    <!-- 通过id查询 -->
     <select id="getOne" parameterType="String" resultMap="tuserMap">
        select * from t_user where usid = #{usid}
    </select>
    
    <!-- 修改 -->
     <update id="update" parameterType="com.pro.dong.T_user.entity.T_user">
        update t_user  
        <set>
              <if test="uname != null">
              				uname=#{uname},
               </if>
               <if test="upwd != null">
               				upwd=#{upwd},
               </if>
               <if test="urealname != null">
              				urealname=#{urealname},
               </if>
               <if test="uphone != null">
               				uphone=#{uphone}
               </if>
        </set>
          where usid=#{usid}
    </update>
  <!-- 根据分页数据start 和size查询数据 -->
    <select id="findByPage" parameterType="Map" resultType="Map">
     SELECT * FROM   
                   (  
                             SELECT A.*, ROWNUM RN   
                             FROM ( SELECT * FROM t_user u join  t_User_Role ur on ur.userid =u.usid join t_Role r on ur.rid=r.rid) A   
                  )  
                  WHERE RN BETWEEN #{start} AND #{size}  
    </select>
    <!-- 查询商品记录总数 -->
    <select id="selectCount" resultType="int">
select count(*) from (select count(*) from ( SELECT * FROM t_user u join  t_User_Role ur on ur.userid =u.usid join t_Role r on ur.rid=r.rid) group by usid ) t_user
    </select>
       <!-- 联查 -->
    <select id="fiveall" resultType="Map">
       select m.mid,m.mname,m.describe,m.fid from T_Role r join T_USER_ROLE ur on r.rid=ur.rid  
				join t_user u on u.usid=ur.userid join T_ROLE_MENU rm on rm.rid=r.rid
				join T_Menu m on rm.mid=m.mid where u.usid=#{usid}
    </select>
     <!-- 赋予权限 -->
    <insert id="maninsert" parameterType="com.pro.dong.T_ROLE.entity.T_USER_ROLE">
        <selectKey keyProperty="urid" order="BEFORE" resultType="java.lang.String">
       select emp_sequence.NEXTVAL  from DUAL
        </selectKey>
         insert into T_USER_ROLE (urid,userid,rid)
             values (#{urid},#{userid},#{rid})
    </insert>
     <!-- 通过id查询 -->
     <select id="turgetOne" parameterType="String" resultType="com.pro.dong.T_ROLE.entity.T_USER_ROLE">
        select * from T_USER_ROLE where urid = #{urid}
    </select>
      <!-- 修改 -->
     <update id="turupdate" parameterType="com.pro.dong.T_ROLE.entity.T_USER_ROLE">
        update T_USER_ROLE  
        <set>
              <if test="userid != null">
              				userid=#{userid},
               </if>
               <if test="rid != null">
               				rid=#{rid}
               </if>
        </set>
          where urid=#{urid}
    </update>
        <!-- 联查 -->
    <select id="manfiveall" resultType="Map">
       select * from t_user t
       join T_USER_ROLE ur on ur.userid=t.usid
       join T_Role r on r.rid=ur.rid
       where t.uname=#{uname}
    </select>
     <!-- 通过id查询 -->
     <select id="mangetOne" parameterType="String" resultType="com.pro.dong.T_ROLE.entity.T_USER_ROLE">
        select * from T_USER_ROLE where userid = #{userid}
    </select>
</mapper>